services:
  postgres:
    container_name: forum-psql
    image: "postgres"
    restart: always
    env_file:
      - .env
    ports:
      - ${PORT_HOST}:${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "${conn_string}"]
      interval: 1s
      timeout: 5s
      retries: 5
    volumes:
      - forum-psql:/var/lib/postgresql/data

  frontend:
    container_name: forum-frontend
    image: "celeschai/forumfrontreact"
    #image: "celeschai/forumfrontamd" (for amd64)
    ports:
      - ${PORT_HOST}:${FRONT_PORT}:${FRONT_PORT}
    stdin_open: true
    environment:
      - REACT_APP_HOST=${HOST}
      - REACT_APP_BACK_PORT=${BACK_PORT}

  backend:
    container_name: forum-backend
    image: "celeschai/forumbackgo"
    #image: "celeschai/forumbackamd"
    ports:
      - ${PORT_HOST}:${BACK_PORT}:${BACK_PORT}
    restart: on-failure
    depends_on:
      postgres:
          condition: service_healthy
    env_file:
      -  .env
    environment:
      HOST: ${HOST}
      FRONT_PORT: ${FRONT_PORT}
      BACK_PORT: ${BACK_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSL_MODE: ${DB_SSL_MODE}
    volumes:
      - forum-backend:/backend

  backup:
    container_name: forum-backup 
    image: "postgres"
    depends_on:
      postgres:
          condition: service_healthy
    volumes:
      - forum-backup:/backup
    command: > #routinely backs up and remove older files
      bash -c "while true; do
        PGPASSWORD=$$POSTGRES_PASSWORD pg_dump -h $$POSTGRES_HOST -U $$POSTGRES_USER -Fc $$POSTGRES_DB > /backup/$$(date +%Y-%m-%d-%H-%M-%S).dump
        echo ""Backup done at $$(date +%Y-%m-%d_%H:%M:%S)""
        ls -1 /backup/*.dump | head -n -2 | xargs volume rm -f
        
        sleep 86400
      done"
    env_file:
      -  .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}

volumes:
  forum-psql:
  forum-backend:
  forum-backup: